name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # ===============================
  # FRONTEND JOBS
  # ===============================

  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Build Django frontend
        run: |
          python manage.py check

  test_frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: build_frontend
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run frontend tests
        run: python manage.py test

  # ===============================
  # NOTIFICAÇÃO
  # ===============================

  notify:
      name: Notify (send email)
      needs: [test_frontend]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
 
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.12'
 
        - name: Install requirements for notification script
          run: |
            python -m pip install --upgrade pip
            pip install wheel
 
        - name: Run notification script
          env:
            RECIPIENT: ${{ secrets.EMAIL_USER }}   
            PIPELINE_MSG: "Pipeline executado!"
          run: |
            python scripts/send_email.py

  # ===============================
  # LOG JOB
  # ===============================

  log_summary:
    name: Log Build Summary
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]
    steps:
      - name: Summary
        run: echo "✅ Todos os testes e builds foram concluídos com sucesso."
